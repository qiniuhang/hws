diff --git a/src/http/ngx_http_header_filter_module.c b/src/http/ngx_http_header_filter_module.c
index 9b89405..6097f46 100644
--- a/src/http/ngx_http_header_filter_module.c
+++ b/src/http/ngx_http_header_filter_module.c
@@ -226,6 +226,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
                 r->headers_out.last_modified = NULL;
                 r->headers_out.content_length = NULL;
                 r->headers_out.content_length_n = -1;
+                r->keepalive = 0;
             }
 
             status -= NGX_HTTP_OK;
@@ -279,7 +280,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
 
     clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
 
-    if (r->headers_out.server == NULL) {
+    if (r->headers_out.server == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
             len += sizeof(ngx_http_server_full_string) - 1;
 
@@ -291,7 +292,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
         }
     }
 
-    if (r->headers_out.date == NULL) {
+    if (r->headers_out.date == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         len += sizeof("Date: Mon, 28 Sep 1970 06:00:00 GMT" CRLF) - 1;
     }
 
@@ -393,7 +394,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
             len += sizeof("Keep-Alive: timeout=") - 1 + NGX_TIME_T_LEN + 2;
         }
 
-    } else {
+    } else if (r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         len += sizeof("Connection: close" CRLF) - 1;
     }
 
@@ -448,7 +449,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
     }
     *b->last++ = CR; *b->last++ = LF;
 
-    if (r->headers_out.server == NULL) {
+    if (r->headers_out.server == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
             p = ngx_http_server_full_string;
             len = sizeof(ngx_http_server_full_string) - 1;
@@ -465,7 +466,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
         b->last = ngx_cpymem(b->last, p, len);
     }
 
-    if (r->headers_out.date == NULL) {
+    if (r->headers_out.date == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         b->last = ngx_cpymem(b->last, "Date: ", sizeof("Date: ") - 1);
         b->last = ngx_cpymem(b->last, ngx_cached_http_time.data,
                              ngx_cached_http_time.len);
@@ -564,7 +565,7 @@ ngx_http_header_filter(ngx_http_request_t *r)
                                   clcf->keepalive_header);
         }
 
-    } else {
+    } else if (r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         b->last = ngx_cpymem(b->last, "Connection: close" CRLF,
                              sizeof("Connection: close" CRLF) - 1);
     }
diff --git a/src/http/v2/ngx_http_v2_filter_module.c b/src/http/v2/ngx_http_v2_filter_module.c
index 8621e7a..4e81ed0 100644
--- a/src/http/v2/ngx_http_v2_filter_module.c
+++ b/src/http/v2/ngx_http_v2_filter_module.c
@@ -239,7 +239,7 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
 
     clcf = ngx_http_get_module_loc_conf(r, ngx_http_core_module);
 
-    if (r->headers_out.server == NULL) {
+    if (r->headers_out.server == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
 
         if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
             len += 1 + nginx_ver_len;
@@ -252,7 +252,7 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
         }
     }
 
-    if (r->headers_out.date == NULL) {
+    if (r->headers_out.date == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         len += 1 + ngx_http_v2_literal_size("Wed, 31 Dec 1986 18:00:00 GMT");
     }
 
@@ -436,7 +436,7 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
         pos = ngx_sprintf(pos, "%03ui", r->headers_out.status);
     }
 
-    if (r->headers_out.server == NULL) {
+    if (r->headers_out.server == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
 
         if (clcf->server_tokens == NGX_HTTP_SERVER_TOKENS_ON) {
             ngx_log_debug1(NGX_LOG_DEBUG_HTTP, fc->log, 0,
@@ -479,7 +479,7 @@ ngx_http_v2_header_filter(ngx_http_request_t *r)
         }
     }
 
-    if (r->headers_out.date == NULL) {
+    if (r->headers_out.date == NULL && r->headers_out.status != NGX_HTTP_NO_CONTENT) {
         ngx_log_debug1(NGX_LOG_DEBUG_HTTP, fc->log, 0,
                        "http2 output header: \"date: %V\"",
                        &ngx_cached_http_time);
